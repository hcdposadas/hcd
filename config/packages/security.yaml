security:
    encoders:
        App\Entity\Usuario:
            algorithm: auto

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        ROLE_PROSECRETARIO_LEGISLATIVO: ROLE_LEGISLATIVO
        ROLE_RRHH_ADMIN: ROLE_RRHH

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Usuario
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        sesion:
            pattern: ^/sesion/*
            provider: app_user_provider
            form_login:
                login_path: /sesion/login
                check_path: /sesion/login
                default_target_path: /sesion
            logout:
                path:   /sesion/logout
                target: /sesion
            anonymous:    true
            guard:
                authenticators:
                    - App\Security\LoginSesionFormAuthenticator
#            logout_on_user_change: true
            user_checker: App\Security\UserChecker

        main:
            pattern: ^/
            form_login:
                provider: app_user_provider
            logout:       true
            anonymous:    true
#            logout_on_user_change: true
            switch_user: { role: ROLE_ADMIN, parameter: _want_to_be_this_user }
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            user_checker: App\Security\UserChecker

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/sesion/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/pantalla, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/pantallota, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset-password, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/sesion/, role: [ROLE_CONCEJAL, ROLE_SECRETARIO, ROLE_LEGISLATIVO, ROLE_DEFENSOR, ROLE_PROSECRETARIO] }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/api/expedientes, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/ajax/get-expedientes, role: IS_AUTHENTICATED_ANONYMOUSLY } #se agrega ruta especifica para consulta externa
        - { path: ^/, role: IS_AUTHENTICATED_FULLY }
