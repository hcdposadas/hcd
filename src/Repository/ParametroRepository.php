<?php

namespace App\Repository;

use App\Entity\Parametro;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\QueryBuilder;

/**
 * ParametroRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParametroRepository extends \Doctrine\ORM\EntityRepository {
	public function findAll() {
		return $this->createQueryBuilder( 'p' )
		            ->where( 'p.activo = true' )
		            ->getQuery()
		            ->getResult();
	}

	public function grupo( $grupo ) {
		return $this->createQueryBuilder( 'p' )
		            ->where( 'p.activo = true' )
		            ->andWhere( 'p.grupo = :grupo' )
		            ->setParameter( 'grupo', $grupo )
		            ->orderBy( 'p.orden', 'ASC' );
	}

	/**
	 * @param $slug
	 *
	 * @return null|Parametro
	 */
	public function getBySlug( $slug ) {
		try {
			return $this->createQueryBuilder( 'p' )
			            ->where( 'p.activo = true' )
			            ->andWhere( 'p.slug = :slug' )
			            ->setParameter( 'slug', $slug )
			            ->setMaxResults( 1 )
			            ->getQuery()
			            ->getOneOrNullResult();
		} catch ( NonUniqueResultException $e ) {
			return null;
		}
	}

	public static function findTipoSesionActivo( EntityRepository $er ) {
		return $qb = $er->createQueryBuilder( 'p' )
		                ->where( 'p.grupo = :grupoSesion' )
		                ->andWhere( 'p.activo = true' )
		                ->setParameter( 'grupoSesion', 'sesion-tipo' );

	}
}
